"""standardize_geo_loc_names

Revision ID: c9b71aa14630
Revises: 317b417d3713
Create Date: 2025-05-30 11:06:01.152301

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c9b71aa14630'
down_revision: Union[str, None] = '317b417d3713'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('geo_locations', sa.Column('admin1_name', sa.Text(), nullable=True))
    op.add_column('geo_locations', sa.Column('admin2_name', sa.Text(), nullable=True))
    op.add_column('geo_locations', sa.Column('admin3_name', sa.Text(), nullable=True))
    op.alter_column('geo_locations', 'country_name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_constraint('uq_geo_locations_country_name_region_name_locality_name', 'geo_locations', type_='unique')
    op.create_unique_constraint('uq_geo_locations_division_names', 'geo_locations', ['country_name', 'admin1_name', 'admin2_name', 'admin3_name'], postgresql_nulls_not_distinct=True)
    op.drop_column('geo_locations', 'full_text')
    op.drop_column('geo_locations', 'continent_name')
    op.drop_column('geo_locations', 'region_name')
    op.drop_column('geo_locations', 'locality_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('geo_locations', sa.Column('locality_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('geo_locations', sa.Column('region_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('geo_locations', sa.Column('continent_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('geo_locations', sa.Column('full_text', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint('uq_geo_locations_division_names', 'geo_locations', type_='unique')
    op.create_unique_constraint('uq_geo_locations_country_name_region_name_locality_name', 'geo_locations', ['country_name', 'region_name', 'locality_name'], postgresql_nulls_not_distinct=True)
    op.alter_column('geo_locations', 'country_name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('geo_locations', 'admin3_name')
    op.drop_column('geo_locations', 'admin2_name')
    op.drop_column('geo_locations', 'admin1_name')
    # ### end Alembic commands ###
