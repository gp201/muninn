"""init

Revision ID: 8168ddd69f0e
Revises: 
Create Date: 2025-02-18 12:41:10.127458

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8168ddd69f0e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alleles',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('region', sa.Text(), nullable=False),
    sa.Column('position_nt', sa.BigInteger(), nullable=False),
    sa.Column('alt_nt', sa.Text(), nullable=False),
    sa.CheckConstraint("alt_nt <> ''", name=op.f('ck_alleles_`alt_nt_not_empty`')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alleles')),
    sa.UniqueConstraint('region', 'position_nt', 'alt_nt', name='uq_alleles_nt_values', postgresql_nulls_not_distinct=True)
    )
    op.create_table('samples',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('accession', sa.Text(), nullable=False),
    sa.Column('consent_level', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_samples'))
    )
    op.create_table('amino_acid_substitutions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('allele_id', sa.BigInteger(), nullable=False),
    sa.Column('position_aa', sa.BigInteger(), nullable=False),
    sa.Column('ref_aa', sa.Text(), nullable=False),
    sa.Column('alt_aa', sa.Text(), nullable=False),
    sa.Column('gff_feature', sa.Text(), nullable=False),
    sa.CheckConstraint("alt_aa <> ''", name=op.f('ck_amino_acid_substitutions_`alt_aa_not_empty`')),
    sa.CheckConstraint("gff_feature <> ''", name=op.f('ck_amino_acid_substitutions_`gff_feature_not_empty`')),
    sa.CheckConstraint("ref_aa <> ''", name=op.f('ck_amino_acid_substitutions_`ref_aa_not_empty`')),
    sa.ForeignKeyConstraint(['allele_id'], ['alleles.id'], name=op.f('fk_amino_acid_substitutions_allele_id_alleles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_amino_acid_substitutions')),
    sa.UniqueConstraint('allele_id', 'position_aa', 'alt_aa', 'gff_feature', name='uq_amino_acid_substitutions_aa_values', postgresql_nulls_not_distinct=True)
    )
    op.create_table('dms_results',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('ferret_sera_escape', sa.Double(), nullable=False),
    sa.Column('stability', sa.Double(), nullable=False),
    sa.Column('allele_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['allele_id'], ['alleles.id'], name=op.f('fk_dms_results_allele_id_alleles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_dms_results')),
    sa.UniqueConstraint('allele_id', name=op.f('uq_dms_results_allele_id'))
    )
    op.create_table('intra_host_variants',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('sample_id', sa.BigInteger(), nullable=False),
    sa.Column('allele_id', sa.BigInteger(), nullable=False),
    sa.Column('ref_dp', sa.BigInteger(), nullable=False),
    sa.Column('alt_dp', sa.BigInteger(), nullable=False),
    sa.Column('alt_freq', sa.Double(), nullable=False),
    sa.ForeignKeyConstraint(['allele_id'], ['alleles.id'], name=op.f('fk_intra_host_variants_allele_id_alleles')),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], name=op.f('fk_intra_host_variants_sample_id_samples')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_intra_host_variants')),
    sa.UniqueConstraint('sample_id', 'allele_id', name='uq_intra_host_variants_sample_allele_pair')
    )
    op.create_table('mutations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('sample_id', sa.BigInteger(), nullable=False),
    sa.Column('allele_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['allele_id'], ['alleles.id'], name=op.f('fk_mutations_allele_id_alleles')),
    sa.ForeignKeyConstraint(['sample_id'], ['samples.id'], name=op.f('fk_mutations_sample_id_samples')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mutations')),
    sa.UniqueConstraint('sample_id', 'allele_id', name='uq_mutations_sample_allele_pair')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mutations')
    op.drop_table('intra_host_variants')
    op.drop_table('dms_results')
    op.drop_table('amino_acid_substitutions')
    op.drop_table('samples')
    op.drop_table('alleles')
    # ### end Alembic commands ###
