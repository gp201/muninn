"""add_columns

Revision ID: aa80dae614d2
Revises: 8168ddd69f0e
Create Date: 2025-02-25 12:31:23.202630

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa80dae614d2'
down_revision: Union[str, None] = '8168ddd69f0e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('alleles', sa.Column('ref_nt', sa.Text(), nullable=False))
    op.add_column('amino_acid_substitutions', sa.Column('ref_codon', sa.Text(), nullable=False))
    op.add_column('amino_acid_substitutions', sa.Column('alt_codon', sa.Text(), nullable=False))
    op.add_column('dms_results', sa.Column('entry_239T', sa.Double(), nullable=False))
    op.add_column('dms_results', sa.Column('SA26_usage_increase', sa.Double(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('ref_rv', sa.BigInteger(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('alt_rv', sa.BigInteger(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('ref_qual', sa.BigInteger(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('alt_qual', sa.BigInteger(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('total_dp', sa.BigInteger(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('pval', sa.Double(), nullable=False))
    op.add_column('intra_host_variants', sa.Column('pass_qc', sa.Boolean(), nullable=False))
    op.add_column('samples', sa.Column('bio_project', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('bio_sample', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('bio_sample_accession', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('bio_sample_model', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('center_name', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('experiment', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('host', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('instrument', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('platform', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('isolate', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('library_name', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('library_layout', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('library_selection', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('library_source', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('organism', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('is_retracted', sa.Boolean(), nullable=False))
    op.add_column('samples', sa.Column('retraction_detected_date', sa.DateTime(), nullable=True))
    op.add_column('samples', sa.Column('isolation_source', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('collection_date', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('release_date', sa.TIMESTAMP(timezone=True), nullable=False))
    op.add_column('samples', sa.Column('creation_date', sa.TIMESTAMP(timezone=True), nullable=False))
    op.add_column('samples', sa.Column('version', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('sample_name', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('sra_study', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('serotype', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('geo_loc_name', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('geo_loc_name_country', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('geo_loc_name_country_continent', sa.Text(), nullable=True))
    op.add_column('samples', sa.Column('assay_type', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('avg_spot_length', sa.Double(), nullable=True))
    op.add_column('samples', sa.Column('bases', sa.BigInteger(), nullable=False))
    op.add_column('samples', sa.Column('bytes', sa.BigInteger(), nullable=False))
    op.add_column('samples', sa.Column('datastore_filetype', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('datastore_region', sa.Text(), nullable=False))
    op.add_column('samples', sa.Column('datastore_provider', sa.Text(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('samples', 'datastore_provider')
    op.drop_column('samples', 'datastore_region')
    op.drop_column('samples', 'datastore_filetype')
    op.drop_column('samples', 'bytes')
    op.drop_column('samples', 'bases')
    op.drop_column('samples', 'avg_spot_length')
    op.drop_column('samples', 'assay_type')
    op.drop_column('samples', 'geo_loc_name_country_continent')
    op.drop_column('samples', 'geo_loc_name_country')
    op.drop_column('samples', 'geo_loc_name')
    op.drop_column('samples', 'serotype')
    op.drop_column('samples', 'sra_study')
    op.drop_column('samples', 'sample_name')
    op.drop_column('samples', 'version')
    op.drop_column('samples', 'creation_date')
    op.drop_column('samples', 'release_date')
    op.drop_column('samples', 'collection_date')
    op.drop_column('samples', 'isolation_source')
    op.drop_column('samples', 'retraction_detected_date')
    op.drop_column('samples', 'is_retracted')
    op.drop_column('samples', 'organism')
    op.drop_column('samples', 'library_source')
    op.drop_column('samples', 'library_selection')
    op.drop_column('samples', 'library_layout')
    op.drop_column('samples', 'library_name')
    op.drop_column('samples', 'isolate')
    op.drop_column('samples', 'platform')
    op.drop_column('samples', 'instrument')
    op.drop_column('samples', 'host')
    op.drop_column('samples', 'experiment')
    op.drop_column('samples', 'center_name')
    op.drop_column('samples', 'bio_sample_model')
    op.drop_column('samples', 'bio_sample_accession')
    op.drop_column('samples', 'bio_sample')
    op.drop_column('samples', 'bio_project')
    op.drop_column('intra_host_variants', 'pass_qc')
    op.drop_column('intra_host_variants', 'pval')
    op.drop_column('intra_host_variants', 'total_dp')
    op.drop_column('intra_host_variants', 'alt_qual')
    op.drop_column('intra_host_variants', 'ref_qual')
    op.drop_column('intra_host_variants', 'alt_rv')
    op.drop_column('intra_host_variants', 'ref_rv')
    op.drop_column('dms_results', 'SA26_usage_increase')
    op.drop_column('dms_results', 'entry_239T')
    op.drop_column('amino_acid_substitutions', 'alt_codon')
    op.drop_column('amino_acid_substitutions', 'ref_codon')
    op.drop_column('alleles', 'ref_nt')
    # ### end Alembic commands ###
